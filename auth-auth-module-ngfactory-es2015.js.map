{"version":3,"sources":["./src/app/auth/auth-routing.module.ts","./src/app/auth/auth.module.ts","./src/app/auth/pages/login/login.component.html","./src/app/auth/pages/login/login.component.ts","./src/app/core/services/auth.service.ts"],"names":[],"mappings":"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","file":"auth-auth-module-ngfactory-es2015.js","sourcesContent":["import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { LoginComponent } from \"./pages/login/login.component\";\n\nconst routes: Routes = [{ path: \"\", component: LoginComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AuthRoutingModule {}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\nimport { AuthRoutingModule } from \"./auth-routing.module\";\nimport { LoginComponent } from \"./pages/login/login.component\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\n\n@NgModule({\n  declarations: [LoginComponent],\n  imports: [CommonModule, AuthRoutingModule, FormsModule, ReactiveFormsModule],\n})\nexport class AuthModule {}\n","<div class=\"login-container\">\n  <div class=\"login-box\">\n    <!-- Tabs -->\n    <div class=\"tabs\">\n      <button (click)=\"isLogin = true\" [ngClass]=\"{ active: isLogin }\">\n        Iniciar sesion\n      </button>\n      <button (click)=\"isLogin = false\" [ngClass]=\"{ active: !isLogin }\">\n        Registrarse\n      </button>\n    </div>\n\n    <!-- Avatar -->\n    <div class=\"avatar\">\n      <img\n        *ngIf=\"!isLogin; else defaultAvatar\"\n        src=\"../../../../assets/img/register.png\"\n        alt=\"User Avatar\"\n      />\n      <ng-template #defaultAvatar>\n        <img\n          src=\"../../../../assets/img/usuario.png\"\n          alt=\"Default User Avatar\"\n        />\n      </ng-template>\n    </div>\n\n    <!-- Título dinámico -->\n    <h2>{{ isLogin ? \"Iniciar sesion\" : \"Registrarse\" }}</h2>\n\n    <!-- Formulario de Login -->\n    <form *ngIf=\"isLogin\" [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n      <div class=\"input-group\">\n        <i class=\"fas fa-user\"></i>\n        <input\n          type=\"email\"\n          placeholder=\"Username or e-mail\"\n          formControlName=\"email\"\n          required\n        />\n      </div>\n\n      <div class=\"input-group\">\n        <i class=\"fas fa-lock\"></i>\n        <input\n          type=\"password\"\n          placeholder=\"Password\"\n          formControlName=\"password\"\n          required\n        />\n      </div>\n\n      <div class=\"options\">\n        <label class=\"checkbox-container\">\n          <input type=\"checkbox\" />\n          <span class=\"checkmark\"></span>\n          Recordarme\n        </label>\n        <a (click)=\"openForgotPasswordModal()\">Recuperar contraseña</a>\n      </div>\n\n      <!-- Modal de recuperación de contraseña -->\n      <div class=\"modal\" [class.show]=\"showModal\">\n        <div class=\"modal-content\">\n          <span class=\"close\" (click)=\"closeForgotPasswordModal()\"\n            >&times;</span\n          >\n          <h2>Recuperar contraseña</h2>\n          <p>Ingresa tu correo electrónico para restablecer tu contraseña.</p>\n          <form (ngSubmit)=\"sendPasswordReset()\">\n            <input\n              name=\"resetEmail\"\n              type=\"email\"\n              [(ngModel)]=\"resetEmail\"\n              placeholder=\"Correo electrónico\"\n              required\n            />\n            <button type=\"submit\" class=\"btn-primary\">Restablecer</button>\n          </form>\n        </div>\n      </div>\n\n      <button type=\"submit\" class=\"btn-primary\" [disabled]=\"loginForm.invalid\">\n        Iniciar sesion\n      </button>\n\n      <p class=\"register-link\">\n        <a (click)=\"toggleForm()\">\n          ¿No tienes una cuenta? <strong>Registrarse</strong></a\n        >\n      </p>\n    </form>\n\n    <!-- Formulario de Registro -->\n    <form *ngIf=\"!isLogin\" [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\n      <div class=\"input-group\">\n        <i class=\"fas fa-user\"></i>\n        <input\n          type=\"text\"\n          placeholder=\"Full Name\"\n          formControlName=\"name\"\n          required\n        />\n      </div>\n\n      <div class=\"input-group\">\n        <i class=\"fas fa-envelope\"></i>\n        <input\n          type=\"email\"\n          placeholder=\"Email\"\n          formControlName=\"email\"\n          required\n        />\n      </div>\n\n      <div class=\"input-group\">\n        <i class=\"fas fa-lock\"></i>\n        <input\n          type=\"password\"\n          placeholder=\"Password\"\n          formControlName=\"password\"\n          required\n        />\n      </div>\n\n      <div class=\"input-group\">\n        <i class=\"fas fa-lock\"></i>\n        <input\n          type=\"password\"\n          placeholder=\"Confirm Password\"\n          formControlName=\"confirmPassword\"\n          required\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        class=\"btn-primary\"\n        [disabled]=\"registerForm.invalid\"\n      >\n        Register\n      </button>\n\n      <p class=\"register-link\">\n        <a (click)=\"toggleForm()\"\n          >¿Ya tienes una cuenta? <strong>Iniciar sesion</strong></a\n        >\n      </p>\n    </form>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { AuthService } from \"../../../core/services/auth.service\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"./login.component.html\",\n  styleUrls: [\"./login.component.css\"],\n})\nexport class LoginComponent {\n  loginForm: FormGroup;\n  registerForm: FormGroup;\n  isLogin: boolean = true;\n  showModal = false;\n  resetEmail = \"\";\n\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private router: Router\n  ) {\n    this.loginForm = this.fb.group({\n      email: [\"\", [Validators.required, Validators.email]],\n      password: [\"\", Validators.required],\n    });\n\n    this.registerForm = this.fb.group({\n      name: [\"\", Validators.required],\n      email: [\"\", [Validators.required, Validators.email]],\n      password: [\"\", Validators.required],\n      confirmPassword: [\"\", Validators.required],\n    });\n  }\n  toggleForm() {\n    this.isLogin = !this.isLogin; // Alterna entre login y register\n  }\n\n  openForgotPasswordModal() {\n    this.showModal = true;\n  }\n\n  closeForgotPasswordModal() {\n    this.showModal = false;\n  }\n\n  sendPasswordReset() {\n    if (this.resetEmail) {\n      alert(\"Se ha enviado un enlace de recuperación a: \" + this.resetEmail);\n      this.showModal = false;\n      this.resetEmail = \"\";\n    }\n  }\n\n  onSubmit() {\n    if (this.isLogin) {\n      if (this.loginForm.valid) {\n        this.authService.login(this.loginForm.value).subscribe((response) => {\n          localStorage.setItem(\"token\", response.token);\n          this.router.navigate([\"/dashboard\"]);\n        });\n      }\n    } else {\n      if (this.registerForm.valid) {\n        console.log(\"Registro exitoso\", this.registerForm.value);\n      }\n    }\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\nimport { environment } from \"src/environments/environment\";\n\n@Injectable({ providedIn: \"root\" })\nexport class AuthService {\n  private apiUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient) {}\n\n  login(credentials: any): Observable<any> {\n    return this.http.post(`${this.apiUrl}/login`, credentials);\n  }\n\n  logout() {\n    localStorage.removeItem(\"token\");\n  }\n}\n"],"sourceRoot":"webpack:///"}