{"version":3,"sources":["$_lazy_route_resource lazy namespace object","src/app/app-routing.module.ts","src/app/app.component.html","src/app/app.component.ts","src/app/app.module.ts","src/app/core/interceptors/http.service.ts","src/app/pages/not-found/not-found.component.html","src/app/pages/not-found/not-found.component.ts","src/app/services/factura.service.ts","src/environments/environment.ts","src/main.ts"],"names":[],"mappings":"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","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { NotFoundComponent } from \"./pages/not-found/not-found.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    redirectTo: \"dashboard\", // Redirigir a dashboard si la ruta está vacía\n    pathMatch: \"full\", // Importante para evitar coincidencias parciales\n  },\n  {\n    path: \"auth\",\n    loadChildren: () => import(\"./auth/auth.module\").then((m) => m.AuthModule),\n  },\n  {\n    path: \"dashboard\",\n    loadChildren: () =>\n      import(\"./dashboard/dashboard.module\").then((m) => m.DashboardModule),\n  },\n  { path: \"404\", component: NotFoundComponent }, // Página de error explícita\n  { path: \"**\", redirectTo: \"/404\" }, // Redirige rutas inexistentes a /404\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","<nav\n  class=\"navbar navbar-expand-lg navbar-dark bg-primary\"\n  *ngIf=\"isReady && !isAuthRoute\"\n>\n  <a class=\"navbar-brand\" routerLink=\"/\">DASHBOARD</a>\n  <button\n    class=\"navbar-toggler\"\n    type=\"button\"\n    data-toggle=\"collapse\"\n    data-target=\"#navbarNav\"\n  >\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n\n  <div class=\"collapse navbar-collapse justify-content-end\" id=\"navbarNav\">\n    <ul class=\"navbar-nav text-right\">\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/dashboard\" *ngIf=\"isAuthenticated()\"\n          >Home</a\n        >\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/auth\" *ngIf=\"!isAuthenticated()\"\n          >Login</a\n        >\n      </li>\n      <li class=\"nav-item\">\n        <a\n          class=\"nav-link\"\n          href=\"#\"\n          (click)=\"logout()\"\n          *ngIf=\"isAuthenticated()\"\n          >Cerrar Sesión</a\n        >\n      </li>\n    </ul>\n  </div>\n</nav>\n\n<router-outlet></router-outlet>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router, NavigationEnd } from \"@angular/router\";\nimport { FacturaService } from \"./services/factura.service\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.css\"],\n})\nexport class AppComponent implements OnInit  {\n  isAuthRoute = false;\n  isReady = false;\n\n  ngOnInit() {\n    this.facturaService.getMasterList().subscribe();\n    this.facturaService.getActivoFijo().subscribe();\n  }\n\n  constructor(private router: Router, private facturaService: FacturaService) {\n    \n    this.router.events.subscribe((event) => {\n      if (event instanceof NavigationEnd) {\n        this.isAuthRoute =\n          event.url.startsWith(\"/dashboard\") || event.url.startsWith(\"/404\");\n        this.isReady = true;\n      }\n    });\n  }\n\n  isAuthenticated(): boolean {\n    // Aquí iría tu lógica de autenticación\n    return !!localStorage.getItem(\"token\");\n  }\n\n  logout(): void {\n    localStorage.removeItem(\"token\");\n    this.router.navigate([\"/auth\"]);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AuthInterceptor } from './core/interceptors/http.service';\nimport { NotFoundComponent } from './pages/not-found/not-found.component';\n\n// Angular Material\nimport { \n  MatTableModule, \n  MatPaginatorModule, \n  MatSortModule, \n  MatButtonModule, \n  MatIconModule, \n  MatFormFieldModule, \n  MatInputModule, \n  MatCardModule, \n  MatToolbarModule, \n  MatMenuModule, \n  MatSidenavModule, \n  MatListModule \n} from '@angular/material';\n\n@NgModule({\n  declarations: [AppComponent, NotFoundComponent],\n  imports: [\n    CommonModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    AppRoutingModule,\n    \n    // Material Modules\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatButtonModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatCardModule,\n    MatToolbarModule,\n    MatMenuModule,\n    MatSidenavModule,\n    MatListModule\n  ],\n  exports: [\n    // Re-export the modules so they're available to any module that imports this one\n    CommonModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    AppRoutingModule,\n    \n    // Material Modules\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatButtonModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatCardModule,\n    MatToolbarModule,\n    MatMenuModule,\n    MatSidenavModule,\n    MatListModule\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Injectable } from \"@angular/core\";\nimport {\n  HttpEvent,\n  HttpInterceptor,\n  HttpHandler,\n  HttpRequest,\n} from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  intercept(\n    req: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      req = req.clone({\n        setHeaders: { Authorization: `Bearer ${token}` },\n      });\n    }\n    return next.handle(req);\n  }\n}\n","<div class=\"container text-center mt-5\">\n  <h1>404 - Página No Encontrada</h1>\n  <p>Lo sentimos, la página que buscas no existe.</p>\n  <a routerLink=\"/\" class=\"btn btn-primary\">Ir al Inicio</a>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { Factura, ItemProducto } from '../models/factura.model';\nimport { environment } from 'src/environments/environment';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FacturaService {\n  private apiUrl = environment.apiUrl + 'facturas'; // Ajusta esta URL según tu API\n\n  constructor(private http: HttpClient) { }\n\n  // Obtener todas las facturas\n  getFacturas(): Observable<Factura[]> {\n    return this.http.get<Factura[]>(this.apiUrl);\n  }\n\n  // Obtener una factura por ID\n  getFactura(id: string): Observable<Factura> {\n    return this.http.get<Factura>(`${environment.apiUrl}/searchFactura/${id}`);\n  }\n\n  // Crear una nueva factura\n  createFactura(factura: Partial<Factura>): Observable<Factura> {\n    return this.http.post<Factura>(`${environment.apiUrl}/crear-factura`, factura);\n  }\n\n  getToken(): Observable<any> {\n    return this.http.get<any>(`${environment.apiUrl}/tokens/valid`);\n  } \n\n  getMasterList(): Observable<any> {\n    return this.http.get<any>(`${environment.apiUrl}/masterList`).pipe(\n      tap(masterlist => {\n        if(masterlist){\n          // Filter centroCostos items\n          const centroCostosItems = masterlist.filter((item: any) => item.field === \"centroCosto\");\n          if (centroCostosItems.length > 0) {\n            localStorage.setItem(\"centroCostos\", JSON.stringify(centroCostosItems));\n          }\n\n          // Filter metodoPago items\n          const metodoPagoItems = masterlist.filter((item: any) => item.field === \"metodoPago\");\n          if (metodoPagoItems.length > 0) {\n            localStorage.setItem(\"metodoPago\", JSON.stringify(metodoPagoItems));\n          }\n\n           // Filter typeFacturaCompra items\n           const tiposFactura = masterlist.filter((item: any) => item.field === \"typeFacturaCompra\");\n           if (tiposFactura.length > 0) {\n             localStorage.setItem(\"typeFacturaCompra\", JSON.stringify(tiposFactura));\n           }\n\n           //Filter cuentaContable items\n           const cuentaContable = masterlist.filter((item: any)=> item.field === \"cuentaContable\");\n           if (cuentaContable.length > 0) {\n            localStorage.setItem(\"cuentaContable\", JSON.stringify(cuentaContable));\n          }\n\n          console.log(\"Masterlist\",masterlist);\n        }\n      })\n    );\n  }\n\n\n    getProveedor(nit: string): Observable<any> {\n      return this.http.get<any>(`${environment.apiUrl}/searchProvider/${nit}`).pipe(\n        tap(response => {\n          if (response) {\n            return of(response);\n          }\n          return of(null);\n        })\n      );\n    }\n\n    getActivoFijo(): Observable<any> {\n      return this.http.get<any>(`${environment.apiUrl}/searchActivofijo`).pipe(\n        tap(response => {\n          if (response) {\n            console.log(\"activos fijos -> \",response )\n            // Mapeo para el select\n            const activosFijosOptions = response.map((item: any) => ({\n              value: item.id,\n              label: `${item.name} - ${item.group}`\n            }));\n            //console.log(\"activos activosFijosOptions -> \",activosFijosOptions )\n            // Guardar en localStorage o en una variable del servicio/componente\n            localStorage.setItem(\"activosFijosOptions\", JSON.stringify(activosFijosOptions));\n            // O si es en el componente:\n            // this.activosFijosOptions = activosFijosOptions;\n          }\n          return of(null);\n        })\n      );\n    }\n\n    // Guardar un nuevo proveedor\n    guardarProveedor(proveedor: any): Observable<any> {\n      return this.http.post<any>(`${environment.apiUrl}/crear-proveedor`, proveedor);\n    }\n\n}\n","export const environment = {\n  production: false,\n  apiUrl: \"https://auto-factura.onrender.com/\",\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///","file":"main-es5.js"}